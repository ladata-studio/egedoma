# Generated by Django 4.1.5 on 2023-01-24 17:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('grade', models.IntegerField(choices=[(1, '1 класс'), (2, '2 класс'), (3, '3 класс'), (4, '4 класс'), (5, '5 класс'), (6, '6 класс'), (7, '7 класс'), (8, '8 класс'), (9, '9 класс'), (10, '10 класс'), (11, '11 класс')])),
            ],
            options={
                'verbose_name': 'экзамен',
                'verbose_name_plural': 'экзамены',
                'ordering': ['-grade', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_conversion', models.JSONField(blank=True, null=True, verbose_name='перевод баллов в 100-балльную систему')),
                ('task_points', models.JSONField(blank=True, null=True, verbose_name='баллы за задания')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.exam', verbose_name='экзамен')),
            ],
            options={
                'verbose_name': 'экзамен по предмету',
                'verbose_name_plural': 'экзамены по предметам',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('link', models.CharField(blank=True, max_length=250, null=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='источник добавил')),
            ],
            options={
                'verbose_name': 'источник заданий',
                'verbose_name_plural': 'источники заданий',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='название')),
                ('name_dative', models.CharField(max_length=50, verbose_name="название в форме 'по <предмету>'")),
            ],
            options={
                'verbose_name': 'предмет',
                'verbose_name_plural': 'предметы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='добавлено')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('task_image_url', models.CharField(max_length=128, verbose_name='условие задания')),
                ('answer_type', models.IntegerField(blank=True, choices=[(None, '(Не указано)'), (1, 'Простой ответ'), (2, 'Несколько ответов'), (3, 'Таблица ответов'), (4, 'Развернутый ответ')], default=None, null=True, verbose_name='тип ответа')),
                ('answer', models.JSONField(verbose_name='ответ')),
                ('manual_check', models.BooleanField(default=False, verbose_name='нужна проверка преподавателя')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.source', verbose_name='источник задания')),
            ],
            options={
                'verbose_name': 'задание',
                'verbose_name_plural': 'задания',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kim_number', models.IntegerField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.examsubject')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='api.task')),
            ],
            options={
                'verbose_name': 'экзаменационное задание',
                'verbose_name_plural': 'экзаменационные задания',
                'ordering': ['-task__created_at'],
                'unique_together': {('task', 'exam')},
            },
        ),
        migrations.AddField(
            model_name='examsubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject', verbose_name='предмет'),
        ),
        migrations.AddField(
            model_name='examsubject',
            name='tasks',
            field=models.ManyToManyField(through='api.TaskExam', to='api.task', verbose_name='задания'),
        ),
        migrations.AddField(
            model_name='exam',
            name='subjects',
            field=models.ManyToManyField(through='api.ExamSubject', to='api.subject'),
        ),
        migrations.AlterUniqueTogether(
            name='examsubject',
            unique_together={('exam', 'subject')},
        ),
        migrations.AlterUniqueTogether(
            name='exam',
            unique_together={('name', 'grade')},
        ),
    ]
