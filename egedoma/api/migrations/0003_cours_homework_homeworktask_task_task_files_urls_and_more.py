# Generated by Django 4.1.5 on 2023-01-26 19:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0002_examsource'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('description', models.CharField(max_length=1000, verbose_name='описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='добавлено')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='источник добавил')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'курсы',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('description', models.CharField(max_length=1000, verbose_name='описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='добавлено')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cours', verbose_name='курс')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='источник добавил')),
            ],
            options={
                'verbose_name': 'домашнее задание',
                'verbose_name_plural': 'домашние задания',
            },
        ),
        migrations.CreateModel(
            name='HomeworkTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='добавлено')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='источник добавил')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.homework', verbose_name='домашнее задание')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.taskexam', verbose_name='задание')),
            ],
            options={
                'verbose_name': 'задание в ДЗ',
                'verbose_name_plural': 'задания в ДЗ',
                'unique_together': {('task', 'homework')},
            },
        ),
        migrations.AddField(
            model_name='task',
            name='task_files_urls',
            field=models.JSONField(default='[]', verbose_name='ссылки на файлы для задания'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='task',
            name='created_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='источник добавил'),
        ),
        migrations.AlterField(
            model_name='task',
            name='task_image_url',
            field=models.CharField(max_length=128, verbose_name='ссылка на условие задания'),
        ),
        migrations.CreateModel(
            name='UserSolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.JSONField(verbose_name='ответ')),
                ('status', models.IntegerField(choices=[(1, 'правильно'), (2, 'неверно'), (3, 'ожидает проверки')])),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.homeworktask', verbose_name='задание')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='ученик')),
            ],
            options={
                'verbose_name': 'решение ученика',
                'verbose_name_plural': 'решения учеников',
            },
        ),
        migrations.CreateModel(
            name='CoursExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cours', verbose_name='курс')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.examsubject', verbose_name='экзамен')),
            ],
            options={
                'verbose_name': 'курс по экзамену',
                'verbose_name_plural': 'курсы по экзамену',
                'unique_together': {('exam', 'cours')},
            },
        ),
        migrations.CreateModel(
            name='CoursCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.coursexam', verbose_name='курс')),
                ('curator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='curator', to=settings.AUTH_USER_MODEL, verbose_name='куратор')),
                ('customer', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer', to=settings.AUTH_USER_MODEL, verbose_name='ученик')),
            ],
            options={
                'verbose_name': 'ученик курса',
                'verbose_name_plural': 'ученики курса',
                'unique_together': {('cours', 'customer')},
            },
        ),
    ]
